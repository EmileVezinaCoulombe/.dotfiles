# .zshrc is for interactive shells.
# Set options for the interactive shell there with the setopt and unsetopt commands.
################################################################################
# Source
source "$ZDOTDIR/zsh-aliases"
source "$ZDOTDIR/zsh-exports"
source "$ZDOTDIR/zsh-functions"

################################################################################
# History
export HISTSIZE=10000
export SAVEHIST=10000
export HISTFILE="$XDG_CACHE_HOME/zsh/history"
setopt INC_APPEND_HISTORY # Incrementaly append history
export HISTTIMEFORMAT="[%F %T] "
setopt EXTENDED_HISTORY # Add Timestamp to history
setopt HIST_FIND_NO_DUPS # Don't view duplicate when searching <C-R>
setopt HIST_IGNORE_ALL_DUPS # Don't add duplicate in history

################################################################################
# Plugins
[ -f "${XDG_DATA_HOME:-$HOME/.local/share}/zap/zap.zsh" ] && source "${XDG_DATA_HOME:-$HOME/.local/share}/zap/zap.zsh"
plug "zap-zsh/vim"
plug "zsh-users/zsh-autosuggestions"
plug "zap-zsh/supercharge"
plug "MichaelAquilina/zsh-you-should-use"

plug "zap-zsh/exa"
plug "zsh-users/zsh-syntax-highlighting"
#
plug "zap-zsh/fzf"
plug "wintermi/zsh-rust"
# plug "wintermi/zsh-golang"

################################################################################
## completions

autoload -Uz compinit
compinit -u
plug "hlissner/zsh-autopair"

################################################################################
# vi mode
# bindkey -v
# export KEYTIMEOUT=1
#
# # Use vim keys in tab complete menu:
# bindkey -M menuselect 'h' vi-backward-char
# bindkey -M menuselect 'k' vi-up-line-or-history
# bindkey -M menuselect 'l' vi-forward-char
# bindkey -M menuselect 'j' vi-down-line-or-history
# bindkey -v '^?' backward-delete-char
#
# # Change cursor shape for different vi modes.
# function zle-keymap-select {
#   if [[ ${KEYMAP} == vicmd ]] ||
#      [[ $1 = 'block' ]]; then
#     echo -ne '\e[1 q'
#   elif [[ ${KEYMAP} == main ]] ||
#        [[ ${KEYMAP} == viins ]] ||
#        [[ ${KEYMAP} = '' ]] ||
#        [[ $1 = 'beam' ]]; then
#     echo -ne '\e[5 q'
#   fi
# }
# zle -N zle-keymap-select
# zle-line-init() {
#     zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
#     echo -ne "\e[5 q"
# }
# zle -N zle-line-init
# echo -ne '\e[5 q' # Use beam shape cursor on startup.
# preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.
#
# # Edit line in vim with ctrl-e:
# autoload edit-command-line; zle -N edit-command-line
# bindkey '^e' edit-command-line

################################################################################
# Rice üçö
# Starship üöÄ
# https://github.com/starship/starship
eval "$(starship init zsh)"
# PS1="%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M %{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$%b ".zsh

################################################################################
# Apps

# NVM, NPM and NODE.zsh
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

## direnv
eval "$(direnv hook zsh)"

## Pyenv
eval "$(pyenv init --path)"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# FZF
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_OPS="--extended"
export FZF_DEFAULT_COMMAND="fdfind --type f --type d --type s -H -E .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

################################################################################
# Validate install
source "$ZDOTDIR/zsh-safe-install"

################################################################################
# Fixes
export HISTFILE="$XDG_CACHE_HOME/zsh/history"
